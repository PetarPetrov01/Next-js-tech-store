// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  firstName String
  lastName String
  email String @unique
  username String
  password String?
  image String?
  wishlist Wishlist?
  uploadedProducts Product[]
}

model Product{
  id String @id @default(uuid())
  name String
  description String
  price Float
  stock Int
  categoryId Int
  category Category @relation(fields: [categoryId],references: [id])
  brandId Int
  brand Brand @relation(fields: [brandId], references: [id])
  model String @default("")
  ownerId String
  owner User @relation(fields: [ownerId], references: [id])
  images ProductImage[] 
  wishlist Wishlist[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand{
  id Int @id @default(autoincrement())
  name String @unique
  products Product[]
}

model Category{
  id Int @id @default(autoincrement())
  name String @unique
  products Product[]
}

model ProductImage {
  id Int @id @default(autoincrement())
  url String
  productId String
  product Product @relation(fields: [productId],references: [id])
}

model Wishlist {
  id Int @id @default(autoincrement())
  userId String @unique
  user User? @relation(fields: [userId],references: [id])
  products Product[] 
}